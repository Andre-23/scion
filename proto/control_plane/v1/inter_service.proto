syntax = "proto3";

option go_package = "github.com/scionproto/scion/pkg/proto/control_plane";

package proto.control_plane.v1;

import "proto/drkey/v1/drkey.proto";
import "google/protobuf/timestamp.proto";

service InterService{
    // method to add drkey to database  
    rpc UpdateDRKey(UpdateDRKeyRequest) returns (UpdateDRKeyResponse) {}
    
    //Todo: do not use for now
    // method to delete a key from the database
    //rpc UpdateDRKey(UpdateDRKeyRequest) returns (DeleteDRKeyResponse) {}
}

message UpdateDRKeyRequest {
    // Src ISD-AS of DRKey
    uint64 src_ia = 1;
    // Dst ISD-AS of DRKey
    uint64 dst_ia = 2;
    // Src Host of DRKey
    string src_host = 3;
    // Dst Host of DRKey
    string dst_host = 4;
    // Begin of validity period of DRKey
    google.protobuf.Timestamp epoch_begin = 5;
    // End of validity period of DRKey
    google.protobuf.Timestamp epoch_end = 6;
    // HostHostKey
    bytes key = 7;
    // Protocol value
    proto.drkey.v1.Protocol protocol_id = 8;

    //Todo: do we need the val_time ? 
    // Point in time where requested key is valid
    //google.protobuf.Timestamp val_time = 9;
} 



message UpdateDRKeyResponse{
    // response string 
    string up_res = 1;
}


//Todo: do not use for now
/*
message DeleteDRKeyRequest{
    // Src ISD-AS of DRKey
    uint64 src_ia = 1;
    // Dst ISD-AS of DRKey
    uint64 dst_ia = 2;
    // Src Host of DRKey
    string src_host = 3;
    // Dst Host of DRKey
    string dst_host = 4;
    // Begin of validity period of DRKey
    google.protobuf.Timestamp epoch_begin = 5;
    // End of validity period of DRKey
    google.protobuf.Timestamp epoch_end = 6;
    // HostHostKey
    bytes key = 7;
    // Protocol value
    proto.drkey.v1.Protocol protocol_id = 8;

    //Todo: do we need the val_time ? 
    // Point in time where requested key is valid
    //google.protobuf.Timestamp val_time = 9;
}

message DeleteDRKeyResponse{
    // response string 
    string del_res = 1;
}
*/